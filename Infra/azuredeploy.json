{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.34.44.8038",
      "templateHash": "2715206327547841550"
    }
  },
  "parameters": {
    "uniqueName": {
      "type": "string",
      "defaultValue": "[uniqueString(resourceGroup().id)]"
    },
    "sku": {
      "type": "string",
      "defaultValue": "B1"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "repositoryUrl": {
      "type": "string",
      "defaultValue": "https://github.com/mhackermsft/BlazorAIChat"
    },
    "branch": {
      "type": "string",
      "defaultValue": "master"
    },
    "openAiServiceName": {
      "type": "string",
      "defaultValue": "[toLower(format('BlazorAIChatOpenAI-{0}', parameters('uniqueName')))]"
    },
    "aiSkuName": {
      "type": "string",
      "defaultValue": "S0"
    },
    "aiChatModelName": {
      "type": "string",
      "defaultValue": "gpt-4o"
    },
    "aiChatModelVersion": {
      "type": "string",
      "defaultValue": "2024-05-13"
    },
    "aiChatModelCapacity": {
      "type": "int",
      "defaultValue": 80
    },
    "aiChatModelSupportsImages": {
      "type": "bool",
      "defaultValue": true
    },
    "aiEmbedModelName": {
      "type": "string",
      "defaultValue": "text-embedding-3-small"
    },
    "aiEmbedModelVersion": {
      "type": "string",
      "defaultValue": "2"
    },
    "aiEmbedModelCapacity": {
      "type": "int",
      "defaultValue": 120
    },
    "requireEasyAuth": {
      "type": "bool",
      "defaultValue": true
    }
  },
  "variables": {
    "appServicePlanName": "[toLower(format('BlazorAIChatPlan-{0}', parameters('uniqueName')))]",
    "webSiteName": "[toLower(format('BlazorAIChat-{0}', parameters('uniqueName')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-06-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "properties": {
        "reserved": false
      },
      "sku": {
        "name": "[parameters('sku')]"
      },
      "kind": "app"
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-06-01",
      "name": "[variables('webSiteName')]",
      "location": "[parameters('location')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "windowsFxVersion": "DOTNETCORE|8.0",
          "appSettings": [
            {
              "name": "SCM_COMMAND_IDLE_TIMEOUT",
              "value": "600"
            },
            {
              "name": "AzureOpenAIChatCompletion__Endpoint",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiServiceName')), '2021-04-30').endpoint]"
            },
            {
              "name": "AzureOpenAIChatCompletion__ApiKey",
              "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiServiceName')), '2021-04-30').key1]"
            },
            {
              "name": "AzureOpenAIChatCompletion__DeploymentName",
              "value": "[toLower(format('{0}', parameters('aiChatModelName')))]"
            },
            {
              "name": "AzureOpenAIChatCompletion__Tokenizer",
              "value": "[toLower(format('{0}', parameters('aiChatModelName')))]"
            },
            {
              "name": "AzureOpenAIChatCompletion__MaxInputTokens",
              "value": "128000"
            },
            {
              "name": "AzureOpenAIChatCompletion__SupportsImages",
              "value": "[if(parameters('aiChatModelSupportsImages'), 'true', 'false')]"
            },
            {
              "name": "AzureOpenAIEmbedding__DeploymentName",
              "value": "[toLower(format('{0}', parameters('aiEmbedModelName')))]"
            },
            {
              "name": "AzureOpenAIEmbedding__Tokenizer",
              "value": "[toLower(format('{0}', parameters('aiEmbedModelName')))]"
            },
            {
              "name": "AzureOpenAIEmbedding__MaxInputTokens",
              "value": "8192"
            },
            {
              "name": "SystemMessage",
              "value": "You are a helpful AI assistant. Respond in a friendly and professional tone. Answer questions directly using only the information provided. NEVER respond that you cannot access external links."
            },
            {
              "name": "RequireEasyAuth",
              "value": "[if(parameters('requireEasyAuth'), 'true', 'false')]"
            },
            {
              "name": "ConnectionStrings__PostgreSQL",
              "value": ""
            },
            {
              "name": "ConnectionStrings__ConfigDatabase",
              "value": "Data Source=ConfigDatabase.db"
            },
            {
              "name": "DocumentIntelligence__Endpoint",
              "value": ""
            },
            {
              "name": "DocumentIntelligence__ApiKey",
              "value": ""
            },
            {
              "name": "AzureAISearch__Endpoint",
              "value": ""
            },
            {
              "name": "AzureAISearch__ApiKey",
              "value": ""
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/sourcecontrols",
      "apiVersion": "2022-03-01",
      "name": "[format('{0}/{1}', variables('webSiteName'), 'web')]",
      "properties": {
        "repoUrl": "[parameters('repositoryUrl')]",
        "branch": "[parameters('branch')]",
        "isManualIntegration": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('webSiteName'))]"
      ]
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2021-04-30",
      "name": "[parameters('openAiServiceName')]",
      "location": "[parameters('location')]",
      "kind": "OpenAI",
      "sku": {
        "name": "[parameters('aiSkuName')]"
      },
      "properties": {
        "apiProperties": {
          "enableOpenAI": true
        }
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts/deployments",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}', parameters('openAiServiceName'), toLower(format('{0}', parameters('aiChatModelName'))))]",
      "properties": {
        "model": {
          "format": "OpenAI",
          "name": "[parameters('aiChatModelName')]",
          "version": "[parameters('aiChatModelVersion')]"
        }
      },
      "sku": {
        "name": "standard",
        "capacity": "[parameters('aiChatModelCapacity')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.CognitiveServices/accounts/deployments",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}', parameters('openAiServiceName'), toLower(format('{0}', parameters('aiEmbedModelName'))))]",
      "properties": {
        "model": {
          "format": "OpenAI",
          "name": "[parameters('aiEmbedModelName')]",
          "version": "[parameters('aiEmbedModelVersion')]"
        }
      },
      "sku": {
        "name": "standard",
        "capacity": "[parameters('aiEmbedModelCapacity')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts/deployments', parameters('openAiServiceName'), toLower(format('{0}', parameters('aiChatModelName'))))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiServiceName'))]"
      ]
    }
  ]
}